연결형


37페이지 프로그래밍 언어별 특성

JAVA           *                  *    2000년에 .NET 환경에 맞춰 설계된 언어이다. 
                                          C와 C++의 발전된 형태로, VISUAL BASIC과 같이 사용자 인터페이스를
                                          쉽게 만드는 컴포넌트 기능을 제공하기도 한다. 
                                          .NET 환경에서 실행되기 때문에 .NET 환경이 설치되어야 하고, 
                                          C# 컴파일러를 필요로 한다.           

PYTHON       *                  *   C 언어를 발전시킨 언어로 클래스, 상속 등을 제공하는 
                                         객체 지향 프로그래밍 언어이다. 대형 프로젝트 수행 시 
                                         모듈별 분리가 가능하여 개발과 유지 관리에 적합하다.

C++            *                  *   배우기 쉽고 이식성이 좋은 언어로 최근 트렌드와 잘 맞는다, 
                                         다양한 함수들도 많이 제공되어 스타트업과 글로법 기업에서도 
                                         많이 사용한다. PERL 언어처럼 인터프리터 언어이면서 
                                         객체 지향 언어, 스크립트 언어이다.

JAVASCRIPT   *                  *   C++에 비해 단순하고 분산 환경 및 보안성을 지원한다.
                                         JAVA 언어는 컴파일을 거쳐야 하며, 컴파일을 통해 생성된 
                                         class 파일을 가상 머신을 통해 실행하여야 한다.

C#              *                  *   1995년에 개발된 객체 지향 스크립트 언어로 웹 페이지 동작을 구현할 수 있다. 
                                         빠른시간에 코드를 완성할 수 있고 확장성이 좋으며 배우기 쉽다는 장점이 있으나, 
                                         보안이나 성능이 다른 언어에 비하여 부족하다는 단점이 있다.



53페이지 디자인 패턴

프락시 패턴                 *               *   오직 하나의 인스턴스만을 가지도록 하는 패턴

커맨드 패턴                *               *    하나의 인터페이스로 제공하는 패턴

옵서버 패턴                *               *    템플릿을 정의하고 구체화는 서브클래스에서 정의하는 패턴

싱글톤 패턴                *               *    하나의 오브젝트 상태가 변할 때 관련자에게 알리고
                                                    자동 업데이트를 수행하는 패턴

퍼사드 패턴                *               *    어떤 인스턴스를 생성할지는 서브클래스에서 
                                                    정의하도록 하는 패턴

팩토리 메소드 패턴       *               *    요청 자체를 캡슐화하여 파라미터를 전달하는 패턴

템플릿 메소드 패턴       *               *    객체의 대리자를 이용하여 다른 객체로의 접근을 통제하는 패턴



43페이지  실행 방식에 따른 프로그래밍 언어의 분류 체계

논리형 언어               *                *   컴퓨터에 저장된 명령어들이 순차적으로 실행되는
                                                   프로그래밍 방식으로 절차형 언어라고도 한다.

명령형 언어               *                *   수학적 수식과 같은 함수들로 프로그램을 구성하여 
                                                   호출하는 방식의 언어이다.

객체 지향형 언어        *                *    규칙에 대한 활성화 조건이 만족되면 연관된 규칙이 
                                                   실행되는 구조로, 추론과 관계 규칙에 의해 원하는 결과를
                                                   얻는다.

함수형 언어              *                *    객체 간의 메시지 통신을 이용하여 프로그래밍하는 방식으로
                                                   JAVA와 C++이 객체 지향 언어에 속한다.



서술(약술)형

65페이지  모듈(Module)과 패키지(Package)

여러 개의 모듈을 한 개의 폴더에 묶어서 기능을 제공한다. 
(                )과 모듈명을 import하여 불러올 수 있다.
ex : import(           ).(모듈명)

답 : (                       )


66페이지  라이브러리의 개념

(                )란 프로그램을 보다 쉽고 효율적으로 작성하기 위해 개발자들이 사전에 만들어 놓은 양식을 의미한다.

답 : (                 )


36페이지  컴파일러와 인터프리터

프로그램 문장을 하나씩 번역하고 실행할 수 있도록 하는 프로그램이다. 컴파일 과정이 없기 때문에 
개발하는과정에서 사용하면 유용하며, (              ) 방식의 언어는모두 (                 )를 필요로 한다. 
실행 속도가 느리고메모리 사용이 비효율적이라는 단점이 있다.

답 : (                      )


41페이지  클래스(Class)

(           )는 객체 지향 프로그래밍에서 객체를 표현하는 추상 데이터 타입으로 객체를 생성하는 틀이다.
기존 언어에서 지원하던 사용자 정의 자료형 및 서브프로그램의 개념을 발전시켜 JAVA, C++ 등에서 
(            )를 통해 추상화된 자료형을 제공한다.

답 : (                   )



4지선다형    

39페이지  구현 기법에 따른 분류

프로그램밍 언어의 유형으로 구현 기법에 따른 분류로 틀린것은? (    )

(1) 인터프리터 방식의 언어

(2) 명령어 방식의 언어

(3) 컴파일 방식의 언어

(4) 혼합형 방식의 언어


40페이지  객체의 구성 요소

객체의 구성 요소 틀린것은?  (   )

(1) 속성

(2) 개체 

(3) 메소드

(4) 객체


6 페이지 자료구조

자료구조 형태 중 틀린것은? (   )

(1) 비선형 구조

(2) 파일 구조

(3) 복합 구조

(4) 선형 구조